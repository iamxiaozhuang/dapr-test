@page "/serviceinvoke"
@using DaprTest1.Shared
@inject HttpClient Http

<h1>服务调用</h1>

<p>This component demonstrates calling the web api in other service.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private WeatherForecast[] forecasts;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("WeatherForecast");
        @*HttpResponseMessage responseMessage = await Http.GetAsync("WeatherForecast");
        if (responseMessage.IsSuccessStatusCode)
        {
            forecasts = await responseMessage.Content.ReadFromJsonAsync<WeatherForecast[]>();
        }
        else
        {
            string exceptionMessage = await responseMessage.Content.ReadAsStringAsync();
            Console.WriteLine(exceptionMessage);
            throw new Exception(exceptionMessage);
        }*@
    }

}
